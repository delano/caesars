CAESARS -- CHANGES

#### 0.7.5 (2010-05-??) ###############################

* FIXED: Broken tryout was broken

#### 0.7.4 (2010-02-15) ###############################

* CHANGE: Remove hanna dependency [Diego Elio 'Flameeyes' PettenÃ²]

#### 0.7.3 (2009-06-23) ###############################

* FIXED: Caesars::Config now correctly reports the config file in exceptions

#### 0.7.2 (2009-06-13) ###############################

* FIXED: Caesars::Hash method missing now correctly returns 
  hash values for element keys which are Strings. 
* ADDED: Caesars::Hash.__class__ method which returns
  one of: Hash (Ruby 1.9) or Caesars::OrderedHash (Ruby 1.8)
* CHANGE: All arguments to forced_hash methods now reference
  the value of the first argument. They were previously 
  ignored but now mimic the default behavior.


#### 0.7.1 (2009-06-08) ###############################

* FIXED: Updated file manifest in gemspec
* FIXED: Correct mistake in rdocs for Caesars::Config.new
* CHANGE: Caesars::** classes moved into separate files.


#### 0.7.0 (2009-06-03) ###############################

* CHANGE: Post-processing for Caesars::Config classes now occurs
  after all config files have been loaded and parsed. This may break
  some sub-classes which is one of the reasons I incremented the
  MINOR version. 

#### 0.6.8 (2009-06-01) ###############################

* ADDED: forced_array elements now store blocks as Procs (they were previously ignored)
* ADDED: drill to test the new forced_array functionality. 

#### 0.6.7 (2009-05-23) ###############################

* FIXED: Bug in inherited when calling from an anonymous class
* ADDED: tryouts/

#### 0.6.6 (2009-05-12) ###############################

* CHANGE: Renamed OrderedHash to Caesars::OrderedHash to eliminate change of namespace conflicts
* CHANGE: Caesars::VERSION is now a String and includes the TINY (0.6.6)
* FIXED: OrderedHash.merge was making an inappropriate call to dup


#### 0.6.5 (2009-05-10) ###############################

* FIXED: OrderHash was missing from 0.6.4 release

#### 0.6.4 (2009-05-10) ###############################

* CHANGE: OrderedHash support for Ruby 1.8 and JRuby


#### 0.6.3 (2009-05-04) ###############################

* FIXED: Bug in forced_hash, not creating some keys


#### 0.6.2 (2009-05-03) ###############################

* FIXED: When setting Caesars::Config.verbose it would get reset after a refresh. 
* FIXED: Handling a keyword that's passed to both forced_hash and chill
* ADDED: Print message to STDERR when force refreshing in debug or verbose mode
* ADDED: Caesars::SyntaxError


#### 0.6.1 (2009-05-02) ###############################

* ADDED: known_symbol? and known_symbol_by_glass?
 
#### 0.6.0 (2009-04-30) ###############################

* ADDED: Forced reloading for Caesars::Config.refresh. This allows
one DSL to affect the parsing of another. 
* ADDED: Caesars.forced_ignore
* ADDED: Better docs for Caesars::Config
* ADDED: Ceasars::Config.has_key?


#### 0.5.6 (2009-04-28) ###############################

* FIXED: Bug in fixed_hash which wasn't forcing the hash man!

#### 0.5.5 (2009-04-27) ###############################

* CHANGE: Caesars.chill and Caesars.forced_hash can now be used together. 
* ADDED: Print error to STDERR when a duplicate key found for forced_hash keys
* ADDED: Caesars.forced_array
* CHANGE: Caesars.method_missing now stores and returns an empty Caesars::Hash
for known methods that are called (currently only ones defined by forced_array)


#### 0.5.4 (2009-04-11) ###############################

* FIXED: find_deferred would abort early because the safety limit
to prevent endless loops wasn't being reset between calls. 


#### 0.5.3 (2009-04-10) ###############################

* ADDED: Better error handling when reading DSL config files
* ADDED: forced_hash method 


#### 0.5.2 (2009-03-31) ###############################

* ADDED: Caesars.debug?, Caesars.enable_debug, Caesars.disable_debug
* CHANGED: find_deferred now supports nested Arrays. See rdocs. 
* BUG: Found bug related to string/symbol ambiguity when using find.
It's not fixed yet so for now be mindful of which attributes are 
strings and which are symbols. String attributes are stored as 
strings but find and find_deferred look for symbols. The hash syntax
and method accessors are not affected. 


#### 0.5.1 (2009-03-11) ###############################

* FIXED: Method-syntax was broken for attributes of top level method
* FIXED: Caesars::Hash#refresh was setting @options to nil
* UPDATED: docs and bin/example to reflect Caesars::Hash changes. 
* FIXED: instance_variables in Ruby 1.9.1 returns Symbols 


#### 0.5.0 (2009-03-11) ###############################

* FIXED: find_deferred now gracefully handles nil errors
* ADDED: empty? method in Caesars::Config
* ADDED: post processing hook in Caesars::Config#refresh
* ADDED: Caesars::Hash#to_hash now recursively casts children to ::Hash.
* FIXED: Added Array support to Caesars::Hash
* ADDED: Setters for Caesars attributes
* ADDED: Caesars::Config supports multiple config files
* ADDED: Top level methods used more than once now merges values
rather than overwrites. 
* ADDED: Caesars::Config supports reloading config files on the fly


#### 0.4.2 (2009-03-05) ###############################

* FIXED: missing bin/party.conf in gem release
* FIXED: Now works with Ruby 1.8+
* ADDED: Cleaner rdocs. 
* TODO: Fix support for top level methods with names:
food :extra do; end; # => food_extra


#### 0.4.0 (2009-03-05) ###############################

* CHANGE: Removed bloody method. We now parse blocks immediately.
* CHANGE: Renamed virgin method to chill.
* ADDED: Caesars::Config class for loading DSLs as config files. 
See Example 3. 
* ADDED: Added find_deferred method to automatically jump up the
heirarchy when looking for a specific attribute. 
* ADDED: Added to_hash and [] methods to Caesars to make it 
more hashlike. 
* FIXED: "chilled" attributes weren't available by method name


#### 0.3.2 (2009-03-04) ###############################

* FIXED: Added file and line info for eval code (better debugging).
* CHANGE: The top level DSL method names are now determined by
by the class name. Some::ClassName becomes classname. 
This is less confusing than allowing it to be anything
and makes it possible to use several DSLs in the same
namespace. 


#### 0.3.1 (2009-03-04) ###############################

* ADDED: Accept instances without a name
* CHANGE: Updated examples. 
* ADDED: More rdocs. 



#### 0.3 (2009-03-04) ###############################

Initial public release

